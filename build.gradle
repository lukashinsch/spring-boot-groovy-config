buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:0.4.1.RELEASE")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jar {
    baseName = 'spring-boot-groovy-config'
    version = '0.1.0'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.codehaus.groovy:groovy-all:2.4.3")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full" // show assertion errors in build
    }
}

if (System.getenv('CI') != 'true') {

    apply plugin: 'signing'
    apply plugin: 'maven'

    group = 'eu.hinsch'

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from tasks.javadoc.destinationDir
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'spring-boot-groovy-config'
                    packaging 'jar'
                    description 'Configure spring boot application with groovy files'
                    url 'https://github.com/lukashinsch/spring-boot-groovy-config/'

                    scm {
                        url 'scm:git@github.com:lukashinsch/spring-boot-groovy-config.git'
                        connection 'scm:git@github.com:lukashinsch/spring-boot-groovy-config.git'
                        developerConnection 'scm:git@github.com:lukashinsch/spring-boot-groovy-config.git'
                    }

                    licenses {
                        license {
                            name 'MIT License'
                            url 'http://www.opensource.org/licenses/mit-license.php'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'lukashinsch'
                            name 'Lukas Hinsch'
                        }
                    }
                }
            }
        }
    }
}